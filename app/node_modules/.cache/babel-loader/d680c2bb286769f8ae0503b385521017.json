{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexi\\\\GitHub\\\\sidekick\\\\app\\\\src\\\\components\\\\CreationCommande.jsx\";\nimport React from 'react';\nimport '../css/Style.css';\nimport NavBar from './rfc/NavBar';\nimport CreationProduits from './rfc/CreationProduits';\nimport { Formik, Form, useField, Field } from 'formik';\nimport * as Yup from 'yup'; // Composants Material-UI\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { MenuItem } from '@material-ui/core';\n/**\r\n * @author Alex Lajeunesse\r\n * @class CreationCommande\r\n * @description Gère la page de création et de modification de commandes (affichage, requêtes à l'API, redirection et formulaires)\r\n */\n\nexport default class CreationCommande extends React.Component {\n  /**\r\n   * @author Alex Lajeunesse\r\n   * @constructor de CreationCommande\r\n   * @param {*} props Les propriétés React\r\n   */\n  constructor(props) {\n    super(); // Localisation en français\n\n    Yup.setLocale({\n      mixed: {\n        // eslint-disable-next-line\n        default: 'Champ ${path} invalide',\n        // eslint-disable-next-line\n        required: 'Le champ ${path} est obligatoire'\n      },\n      string: {\n        // eslint-disable-next-line\n        max: 'Le champ ${path} doit contenir un maximum de ${max} caractères',\n        // eslint-disable-next-line\n        email: 'L\\'adresse courriel doit être valide'\n      },\n      number: {\n        // eslint-disable-next-line\n        max: 'Le champ ${path} doit avoir un nombre inférieur à ${max}'\n      }\n    }); // Schéma de validation Yup\n\n    this.schema = Yup.object({\n      entreprise: Yup.string().max(64)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrNom', // test name\n      'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (entreprise) {\n        const {\n          nom\n        } = this.parent;\n\n        if (entreprise || nom) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }).test('ouInclusifEntrTelCourriel', // test name\n      'Le client n\\'a présentement aucune information de contact', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (entreprise) {\n        const {\n          telephone,\n          courriel\n        } = this.parent;\n\n        if (entreprise || telephone || courriel) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      nom: Yup.string().max(64)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrNom', // test name\n      'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (nom) {\n        const {\n          entreprise\n        } = this.parent;\n\n        if (entreprise || nom) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      no_compte: Yup.number().max(169999999) // eslint-disable-next-line\n      .typeError('Le champs ${path} doit contenir un nombre'),\n      telephone: Yup.string().max(32)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrTelCourriel', // test name\n      'Le client n\\'a présentement aucune information de contact', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (telephone) {\n        const {\n          entreprise,\n          courriel\n        } = this.parent;\n\n        if (entreprise || telephone || courriel) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      courriel: Yup.string().email().max(255)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrTelCourriel', // test name\n      'Le client n\\'a présentement aucune information de contact', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (courriel) {\n        const {\n          entreprise,\n          telephone\n        } = this.parent;\n\n        if (entreprise || telephone || courriel) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      po_client: Yup.string().max(64),\n      vendeur: Yup.string().max(4).required(),\n      commentaire: Yup.string().max(512),\n      // Présentement inutile avec le select mis en place\n      attention: Yup.string().email().max(255).required().ensure()\n    });\n  }\n  /**\r\n   * @author Alex Lajeunesse\r\n   * @function render\r\n   * @description Affiche l'interface.\r\n   * @see https://www.youtube.com/watch?v=FD50LPJ6bjE pour Formik et MyTextField\r\n   * @see https://formik.org/docs/examples/field-arrays pour les produits\r\n   */\n\n\n  render() {\n    var _s = $RefreshSig$();\n\n    const MyTextField = ({\n      placeholder,\n      ...props\n    }) => {\n      _s();\n\n      const [field, meta] = useField(props);\n      const error = meta.error && meta.touched ? meta.error : '';\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"form-item\",\n        placeholder: placeholder,\n        ...field,\n        helperText: error,\n        error: !!error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this);\n    };\n\n    _s(MyTextField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n      return [useField];\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cr\\xE9er une commande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          validateOnChange: true,\n          initialValues: {\n            entreprise: '',\n            nom: '',\n            no_compte: '',\n            telephone: '',\n            courriel: '',\n            po_client: '',\n            vendeur: '',\n            commentaire: '',\n            attention: ''\n          },\n          onSubmit: (data, {\n            setSubmitting\n          }) => {\n            setSubmitting(true);\n            console.log(data);\n            setSubmitting(false);\n          },\n          validationSchema: this.schema,\n          children: ({\n            values,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Nom d'entreprise\",\n                  name: \"entreprise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Num\\xE9ro de compte\",\n                  name: \"no_compte\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Nom du client\",\n                  name: \"nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"T\\xE9l\\xE9phone\",\n                  name: \"telephone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Courriel\",\n                  name: \"courriel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"PO du client\",\n                  name: \"po_client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"*Vendeur\",\n                  name: \"vendeur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  className: \"form-item\",\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"attention\",\n                    children: \"*Attention\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"select\",\n                    as: Select,\n                    name: \"attention\",\n                    error: errors.attention,\n                    children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'alexinlife.exe@gmail.com',\n                      children: \"Alex Lajeunesse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Commentaire\",\n                  name: \"commentaire\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"form-item\",\n                  disabled: isSubmitting,\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Enregistrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 109\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: JSON.stringify(values, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CreationProduits, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/alexi/GitHub/sidekick/app/src/components/CreationCommande.jsx"],"names":["React","NavBar","CreationProduits","Formik","Form","useField","Field","Yup","Paper","TextField","FormControl","InputLabel","Select","Button","MenuItem","CreationCommande","Component","constructor","props","setLocale","mixed","default","required","string","max","email","number","schema","object","entreprise","test","nom","parent","telephone","courriel","no_compte","typeError","po_client","vendeur","commentaire","attention","ensure","render","MyTextField","placeholder","field","meta","error","touched","data","setSubmitting","console","log","values","isSubmitting","handleChange","handleBlur","handleSubmit","errors","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport '../css/Style.css';\r\nimport NavBar from './rfc/NavBar';\r\nimport CreationProduits from './rfc/CreationProduits';\r\nimport { Formik, Form, useField, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\n// Composants Material-UI\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\n/**\r\n * @author Alex Lajeunesse\r\n * @class CreationCommande\r\n * @description Gère la page de création et de modification de commandes (affichage, requêtes à l'API, redirection et formulaires)\r\n */\r\nexport default class CreationCommande extends React.Component {\r\n\r\n    /**\r\n     * @author Alex Lajeunesse\r\n     * @constructor de CreationCommande\r\n     * @param {*} props Les propriétés React\r\n     */\r\n    constructor(props) {\r\n        super();\r\n\r\n        // Localisation en français\r\n        Yup.setLocale({\r\n            mixed: {\r\n                // eslint-disable-next-line\r\n                default: 'Champ ${path} invalide',\r\n                // eslint-disable-next-line\r\n                required: 'Le champ ${path} est obligatoire'\r\n            },\r\n            string: {\r\n                // eslint-disable-next-line\r\n                max: 'Le champ ${path} doit contenir un maximum de ${max} caractères',\r\n                // eslint-disable-next-line\r\n                email: 'L\\'adresse courriel doit être valide'\r\n            },\r\n            number: {\r\n                // eslint-disable-next-line\r\n                max: 'Le champ ${path} doit avoir un nombre inférieur à ${max}'\r\n            }\r\n        });\r\n\r\n        // Schéma de validation Yup\r\n        this.schema = Yup.object({\r\n            entreprise: Yup.string()\r\n                .max(64)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrNom', // test name\r\n                    'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (entreprise) {\r\n                        const { nom } = this.parent;\r\n                        if (entreprise || nom) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                )\r\n                .test(\r\n                    'ouInclusifEntrTelCourriel', // test name\r\n                    'Le client n\\'a présentement aucune information de contact', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (entreprise) {\r\n                        const { telephone, courriel } = this.parent;\r\n                        if (entreprise || telephone || courriel) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            nom: Yup.string()\r\n                .max(64)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrNom', // test name\r\n                    'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (nom) {\r\n                        const { entreprise } = this.parent;\r\n                        if (entreprise || nom) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            no_compte: Yup.number()\r\n                .max(169999999)\r\n                // eslint-disable-next-line\r\n                .typeError('Le champs ${path} doit contenir un nombre'),\r\n\r\n            telephone: Yup.string()\r\n                .max(32)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrTelCourriel', // test name\r\n                    'Le client n\\'a présentement aucune information de contact', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (telephone) {\r\n                        const { entreprise, courriel } = this.parent;\r\n                        if (entreprise || telephone || courriel) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            courriel: Yup.string()\r\n                .email()\r\n                .max(255)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrTelCourriel', // test name\r\n                    'Le client n\\'a présentement aucune information de contact', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (courriel) {\r\n                        const { entreprise, telephone } = this.parent;\r\n                        if (entreprise || telephone || courriel) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            po_client: Yup.string()\r\n                .max(64),\r\n\r\n            vendeur: Yup.string()\r\n                .max(4)\r\n                .required(),\r\n\r\n            commentaire: Yup.string()\r\n                .max(512),\r\n\r\n            // Présentement inutile avec le select mis en place\r\n            attention: Yup.string()\r\n                .email()\r\n                .max(255)\r\n                .required()\r\n                .ensure(),\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @author Alex Lajeunesse\r\n     * @function render\r\n     * @description Affiche l'interface.\r\n     * @see https://www.youtube.com/watch?v=FD50LPJ6bjE pour Formik et MyTextField\r\n     * @see https://formik.org/docs/examples/field-arrays pour les produits\r\n     */\r\n    render() {\r\n        const MyTextField = ({ placeholder, ...props }) => {\r\n            const [field, meta] = useField(props);\r\n            const error = meta.error && meta.touched ? meta.error : '';\r\n            return (\r\n                <TextField\r\n                    className=\"form-item\"\r\n                    placeholder={placeholder}\r\n                    {...field}\r\n                    helperText={error}\r\n                    error={!!error}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <NavBar />\r\n                </header>\r\n                <div className=\"content\">\r\n                    <h1>Créer une commande</h1>\r\n                    <Formik\r\n                        validateOnChange\r\n                        initialValues={{ entreprise: '', nom: '', no_compte: '', telephone: '', courriel: '', po_client: '', vendeur: '', commentaire: '', attention: '' }}\r\n                        onSubmit={(data, { setSubmitting }) => {\r\n                            setSubmitting(true);\r\n                            console.log(data);\r\n                            setSubmitting(false);\r\n                        }}\r\n                        validationSchema={this.schema}\r\n                    >\r\n                        {({ values, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n                            <Form>\r\n                                <Paper>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"Nom d'entreprise\"\r\n                                            name=\"entreprise\"\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"Numéro de compte\"\r\n                                            name=\"no_compte\"\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"Nom du client\"\r\n                                            name=\"nom\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"Téléphone\"\r\n                                            name=\"telephone\"\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"Courriel\"\r\n                                            name=\"courriel\"\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"PO du client\"\r\n                                            name=\"po_client\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"*Vendeur\"\r\n                                            name=\"vendeur\"\r\n                                        />\r\n                                        <FormControl className=\"form-item\">\r\n                                            <InputLabel htmlFor=\"attention\">*Attention</InputLabel>\r\n                                            <Field\r\n                                                type=\"select\"\r\n                                                as={Select}\r\n                                                name=\"attention\"\r\n                                                error={errors.attention}\r\n                                            >\r\n                                                <MenuItem value={'alexinlife.exe@gmail.com'}>Alex Lajeunesse</MenuItem>\r\n                                            </Field>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"Commentaire\"\r\n                                            name=\"commentaire\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button className=\"form-item\" disabled={isSubmitting} type=\"submit\"><b>Enregistrer</b></Button>\r\n                                    </div>\r\n                                    <pre>{JSON.stringify(values, null, 2)}</pre>\r\n                                </Paper>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                    <CreationProduits />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}