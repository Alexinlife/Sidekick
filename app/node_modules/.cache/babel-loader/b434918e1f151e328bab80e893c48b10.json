{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexi\\\\GitHub\\\\sidekick\\\\app\\\\src\\\\components\\\\CreationCommande.jsx\";\nimport React from 'react';\nimport '../css/Style.css';\nimport axios from 'axios';\nimport NavBar from './rfc/NavBar';\nimport { Formik, Form, FieldArray, useField, Field } from 'formik';\nimport * as Yup from 'yup'; // Composants Material-UI\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { MenuItem } from '@material-ui/core'; // Dialog\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n/**\r\n * @author Alex Lajeunesse\r\n * @class CreationCommande\r\n * @description Gère la page de création et de modification de commandes (affichage, requêtes à l'API, redirection et formulaires)\r\n */\n\nexport default class CreationCommande extends React.Component {\n  /**\r\n   * @author Alex Lajeunesse\r\n   * @constructor de CreationCommande\r\n   * @param {*} props Les propriétés React\r\n   */\n  constructor(props) {\n    super();\n    this.state = {\n      open: false\n    };\n    this.handleClickOpen = this.handleClickOpen.bind(this);\n    this.handleClickClose = this.handleClickClose.bind(this); // Localisation en français\n\n    Yup.setLocale({\n      mixed: {\n        // eslint-disable-next-line\n        default: 'Champ ${path} invalide',\n        // eslint-disable-next-line\n        required: 'Le champ ${path} est obligatoire'\n      },\n      string: {\n        // eslint-disable-next-line\n        max: 'Le champ ${path} doit contenir un maximum de ${max} caractères',\n        // eslint-disable-next-line\n        email: 'L\\'adresse courriel doit être valide'\n      },\n      number: {\n        // eslint-disable-next-line\n        integer: 'Le champ ${path} doit contenir un nombre entier',\n        // eslint-disable-next-line\n        positive: 'Le champ ${path} doit contenir un nombre positif',\n        // eslint-disable-next-line\n        min: 'Le champ ${path} doit avoir un nombre supérieur à ${min}',\n        // eslint-disable-next-line\n        max: 'Le champ ${path} doit avoir un nombre inférieur à ${max}'\n      }\n    }); // Schéma de validation Yup\n\n    this.schema = Yup.object({\n      entreprise: Yup.string().max(64)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrNom', // test name\n      'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (entreprise) {\n        const {\n          nom\n        } = this.parent;\n\n        if (entreprise || nom) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }).test('ouInclusifEntrTelCourriel', // test name\n      'Le client n\\'a présentement aucune information de contact', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (entreprise) {\n        const {\n          telephone,\n          courriel\n        } = this.parent;\n\n        if (entreprise || telephone || courriel) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      nom: Yup.string().max(64)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrNom', // test name\n      'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (nom) {\n        const {\n          entreprise\n        } = this.parent;\n\n        if (entreprise || nom) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      no_compte: Yup.number().max(169999999) // eslint-disable-next-line\n      .typeError('Le champs ${path} doit contenir un nombre'),\n      telephone: Yup.string().max(32)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrTelCourriel', // test name\n      'Le client n\\'a présentement aucune information de contact', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (telephone) {\n        const {\n          entreprise,\n          courriel\n        } = this.parent;\n\n        if (entreprise || telephone || courriel) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      courriel: Yup.string().email().max(255)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrTelCourriel', // test name\n      'Le client n\\'a présentement aucune information de contact', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (courriel) {\n        const {\n          entreprise,\n          telephone\n        } = this.parent;\n\n        if (entreprise || telephone || courriel) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      }),\n      po_client: Yup.string().max(64),\n      vendeur: Yup.string().max(4).required(),\n      commentaire: Yup.string().max(512),\n      attention: Yup.string().email().max(255).required(),\n      produits: Yup.array().of(Yup.object({\n        code: Yup.string().max(32)\n        /**\r\n         * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n         */\n        .test('ouInclusifCodeDesc', // test name\n        'Au moins l\\'un des champs code et description doit être rempli', // validation message to the user\n        // it has to be function definition to use 'this'\n        function (code) {\n          const {\n            description\n          } = this.parent;\n\n          if (code || description) {\n            return true; // lorsqu'il y a au moins un champs de rempli\n          }\n\n          return false;\n        }),\n        description: Yup.string().max(255)\n        /**\r\n         * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n         */\n        .test('ouInclusifCodeDesc', // test name\n        'Au moins l\\'un des champs code et description doit être rempli', // validation message to the user\n        // it has to be function definition to use 'this'\n        function (description) {\n          const {\n            code\n          } = this.parent;\n\n          if (code || description) {\n            return true; // lorsqu'il y a au moins un champs de rempli\n          }\n\n          return false;\n        }),\n        qte_demandee: Yup.number().integer().min(1).required() // eslint-disable-next-line\n        .typeError('Le champs ${path} doit contenir un nombre'),\n        prix: Yup.number().min(0.0050).positive() // eslint-disable-next-line\n        .typeError('Le champs ${path} doit contenir un nombre')\n      }))\n    });\n  }\n\n  // Lorsque l'utilisateur clique sur l'icône de suppression\n  handleClickOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  // Lorsque l'utilisateur ferme l'Alert de suppression\n  handleClickClose() {\n    this.setState({\n      open: false\n    });\n    window.location.replace(\"/\");\n  }\n\n  /**\r\n   * @author Alex Lajeunesse\r\n   * @function render\r\n   * @description Affiche l'interface.\r\n   * @see https://www.youtube.com/watch?v=FD50LPJ6bjE pour Formik et TextField\r\n   * @see https://formik.org/docs/examples/field-arrays pour les produits\r\n   */\n  render() {\n    var _s = $RefreshSig$(),\n        _s2 = $RefreshSig$();\n\n    // Champs de l'en-tête de la commande\n    const OrderTextField = ({\n      placeholder,\n      ...props\n    }) => {\n      _s();\n\n      const [field, meta] = useField(props); // Erreur si un champ a été touché et que la validation a échoué\n\n      const error = meta.error && meta.touched ? meta.error : ''; // Format de base pour OrderTextField\n\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"order-form-item\",\n        placeholder: placeholder,\n        ...field,\n        helperText: error,\n        error: !!error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this);\n    }; // Champs des produits de la commande\n\n\n    _s(OrderTextField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n      return [useField];\n    });\n\n    const ProductTextField = ({\n      placeholder,\n      ...props\n    }) => {\n      _s2();\n\n      const [field, meta] = useField(props); // Erreur si un champ a été touché et que la validation a échoué\n\n      const error = meta.error && meta.touched ? meta.error : ''; // Format de base pour OrderTextField\n\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"product-form-item\",\n        placeholder: placeholder,\n        ...field,\n        helperText: error,\n        error: !!error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this);\n    }; // Les valeurs initiales du premier produit\n\n\n    _s2(ProductTextField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n      return [useField];\n    });\n\n    const initialValues = {\n      entreprise: '',\n      nom: '',\n      no_compte: undefined,\n      telephone: '',\n      courriel: '',\n      po_client: '',\n      vendeur: '',\n      commentaire: '',\n      attention: '',\n      produits: [{\n        code: '',\n        descrption: '',\n        qte_demandee: '',\n        prix: undefined\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Dialog, {\n            open: this.state.open,\n            onClose: this.handleClickClose,\n            \"aria-labelledby\": \"alert-dialog-title\",\n            \"aria-describedby\": \"alert-dialog-description\",\n            children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n              id: \"alert-dialog-title\",\n              children: \"Commande créée avec succès !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n              children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                id: \"alert-dialog-description\",\n                children: \"La commande a \\xE9t\\xE9 cr\\xE9\\xE9e avec succ\\xE8s ! Un courriel a \\xE9t\\xE9 envoy\\xE9 \\xE0 la personne mentionn\\xE9e.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.handleClickClose,\n                color: \"primary\",\n                children: \"Ok\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cr\\xE9er une commande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          validateOnChange: true,\n          initialValues: initialValues,\n          onSubmit: async (data, {\n            setSubmitting,\n            resetForm\n          }) => {\n            // Désactive le bouton \"Enregistrer\"\n            setSubmitting(true);\n            console.log(data);\n\n            try {\n              const orderResponse = await axios.post('http://localhost:5000/api/commandes/create', {\n                entreprise: data.entreprise,\n                nom: data.nom,\n                no_compte: data.no_compte,\n                telephone: data.telephone,\n                courriel: data.courriel,\n                po_client: data.po_client,\n                vendeur: data.vendeur,\n                commentaire: data.commentaire,\n                attention: data.attention\n              });\n              console.log(orderResponse);\n              const productURL = 'http://localhost:5000/api/produits/create/' + orderResponse.data[0][0].id;\n              var productResponse = [];\n\n              for (let p = 0; p < data.produits.length; p++) {\n                productResponse[p] = await axios.post(productURL.toString(), {\n                  code: data.produits[p].code,\n                  descrption: data.produits[p].descrption,\n                  qte_demandee: data.produits[p].qte_demandee,\n                  prix: data.produits[p].prix\n                });\n              }\n\n              console.log(productResponse); // Ouvre le popup d'information\n\n              this.handleClickOpen(); // Erreur\n            } catch (error) {\n              console.log(error);\n            } // Réactive le bouton \"Enregistrer\"\n\n\n            setSubmitting(false);\n          },\n          validationSchema: this.schema,\n          children: ({\n            values,\n            isSubmitting,\n            handleChange,\n            handleBlur,\n            handleSubmit\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Paper, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"Nom d'entreprise\",\n                  name: \"entreprise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"Num\\xE9ro de compte\",\n                  name: \"no_compte\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"Nom du client\",\n                  name: \"nom\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"T\\xE9l\\xE9phone\",\n                  name: \"telephone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"Courriel\",\n                  name: \"courriel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"PO du client\",\n                  name: \"po_client\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"*Vendeur\",\n                  name: \"vendeur\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(OrderTextField, {\n                  placeholder: \"Commentaire\",\n                  name: \"commentaire\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  className: \"order-form-item\",\n                  children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                    htmlFor: \"attention\",\n                    children: \"*Attention\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    type: \"select\",\n                    as: Select,\n                    name: \"attention\",\n                    children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                      value: 'alexinlife.exe@gmail.com',\n                      children: \"Alex Lajeunesse\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Produits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              children: /*#__PURE__*/_jsxDEV(FieldArray, {\n                name: \"produits\",\n                children: ({\n                  insert,\n                  remove,\n                  push\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [values.produits.length > 0 && values.produits.map((produit, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col\",\n                      children: [/*#__PURE__*/_jsxDEV(ProductTextField, {\n                        name: `produits.${index}.qte_demandee`,\n                        placeholder: \"*Quantit\\xE9 demand\\xE9e\",\n                        type: \"text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(ProductTextField, {\n                        name: `produits.${index}.code`,\n                        placeholder: \"Code\",\n                        type: \"text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 443,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(ProductTextField, {\n                        name: `produits.${index}.description`,\n                        placeholder: \"Description\",\n                        type: \"text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 448,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(ProductTextField, {\n                        name: `produits.${index}.prix`,\n                        placeholder: \"Prix\",\n                        type: \"text\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 453,\n                        columnNumber: 65\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"form-delete-button\",\n                        disabled: isSubmitting,\n                        onClick: () => remove(index),\n                        children: /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"X\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 458,\n                          columnNumber: 158\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 458,\n                        columnNumber: 65\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 61\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 57\n                  }, this)), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"form-button\",\n                    disabled: isSubmitting,\n                    onClick: () => push({\n                      code: '',\n                      descrption: '',\n                      qte_demandee: '',\n                      prix: undefined\n                    }),\n                    children: /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Ajouter un produit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 50\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              className: \"paper-button\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"form-button\",\n                  disabled: isSubmitting,\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Enregistrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 111\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/alexi/GitHub/sidekick/app/src/components/CreationCommande.jsx"],"names":["React","axios","NavBar","Formik","Form","FieldArray","useField","Field","Yup","Paper","TextField","FormControl","InputLabel","Select","Button","MenuItem","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CreationCommande","Component","constructor","props","state","open","handleClickOpen","bind","handleClickClose","setLocale","mixed","default","required","string","max","email","number","integer","positive","min","schema","object","entreprise","test","nom","parent","telephone","courriel","no_compte","typeError","po_client","vendeur","commentaire","attention","produits","array","of","code","description","qte_demandee","prix","setState","window","location","replace","render","OrderTextField","placeholder","field","meta","error","touched","ProductTextField","initialValues","undefined","descrption","data","setSubmitting","resetForm","console","log","orderResponse","post","productURL","id","productResponse","p","length","toString","values","isSubmitting","handleChange","handleBlur","handleSubmit","insert","remove","push","map","produit","index"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport '../css/Style.css';\r\nimport axios from 'axios';\r\nimport NavBar from './rfc/NavBar';\r\nimport { Formik, Form, FieldArray, useField, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\n// Composants Material-UI\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { MenuItem } from '@material-ui/core';\r\n// Dialog\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n/**\r\n * @author Alex Lajeunesse\r\n * @class CreationCommande\r\n * @description Gère la page de création et de modification de commandes (affichage, requêtes à l'API, redirection et formulaires)\r\n */\r\nexport default class CreationCommande extends React.Component {\r\n\r\n    /**\r\n     * @author Alex Lajeunesse\r\n     * @constructor de CreationCommande\r\n     * @param {*} props Les propriétés React\r\n     */\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.handleClickOpen = this.handleClickOpen.bind(this);\r\n        this.handleClickClose = this.handleClickClose.bind(this);\r\n\r\n        // Localisation en français\r\n        Yup.setLocale({\r\n            mixed: {\r\n                // eslint-disable-next-line\r\n                default: 'Champ ${path} invalide',\r\n                // eslint-disable-next-line\r\n                required: 'Le champ ${path} est obligatoire',\r\n            },\r\n            string: {\r\n                // eslint-disable-next-line\r\n                max: 'Le champ ${path} doit contenir un maximum de ${max} caractères',\r\n                // eslint-disable-next-line\r\n                email: 'L\\'adresse courriel doit être valide',\r\n            },\r\n            number: {\r\n                // eslint-disable-next-line\r\n                integer: 'Le champ ${path} doit contenir un nombre entier',\r\n                // eslint-disable-next-line\r\n                positive: 'Le champ ${path} doit contenir un nombre positif',\r\n                // eslint-disable-next-line\r\n                min: 'Le champ ${path} doit avoir un nombre supérieur à ${min}',\r\n                // eslint-disable-next-line\r\n                max: 'Le champ ${path} doit avoir un nombre inférieur à ${max}',\r\n            },\r\n        });\r\n\r\n        // Schéma de validation Yup\r\n        this.schema = Yup.object({\r\n            entreprise: Yup.string()\r\n                .max(64)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrNom', // test name\r\n                    'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (entreprise) {\r\n                        const { nom } = this.parent;\r\n                        if (entreprise || nom) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                )\r\n                .test(\r\n                    'ouInclusifEntrTelCourriel', // test name\r\n                    'Le client n\\'a présentement aucune information de contact', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (entreprise) {\r\n                        const { telephone, courriel } = this.parent;\r\n                        if (entreprise || telephone || courriel) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            nom: Yup.string()\r\n                .max(64)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrNom', // test name\r\n                    'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (nom) {\r\n                        const { entreprise } = this.parent;\r\n                        if (entreprise || nom) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            no_compte: Yup.number()\r\n                .max(169999999)\r\n                // eslint-disable-next-line\r\n                .typeError('Le champs ${path} doit contenir un nombre'),\r\n\r\n            telephone: Yup.string()\r\n                .max(32)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrTelCourriel', // test name\r\n                    'Le client n\\'a présentement aucune information de contact', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (telephone) {\r\n                        const { entreprise, courriel } = this.parent;\r\n                        if (entreprise || telephone || courriel) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            courriel: Yup.string()\r\n                .email()\r\n                .max(255)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrTelCourriel', // test name\r\n                    'Le client n\\'a présentement aucune information de contact', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (courriel) {\r\n                        const { entreprise, telephone } = this.parent;\r\n                        if (entreprise || telephone || courriel) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                ),\r\n\r\n            po_client: Yup.string()\r\n                .max(64),\r\n\r\n            vendeur: Yup.string()\r\n                .max(4)\r\n                .required(),\r\n\r\n            commentaire: Yup.string()\r\n                .max(512),\r\n\r\n            attention: Yup.string()\r\n                .email()\r\n                .max(255)\r\n                .required(),\r\n\r\n            produits: Yup.array().of(\r\n                Yup.object({\r\n                    code: Yup.string()\r\n                        .max(32)\r\n                        /**\r\n                         * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                         */\r\n                        .test(\r\n                            'ouInclusifCodeDesc', // test name\r\n                            'Au moins l\\'un des champs code et description doit être rempli', // validation message to the user\r\n                            // it has to be function definition to use 'this'\r\n                            function (code) {\r\n                                const { description } = this.parent;\r\n                                if (code || description) {\r\n                                    return true; // lorsqu'il y a au moins un champs de rempli\r\n                                }\r\n                                return false;\r\n                            }\r\n                        ),\r\n\r\n                    description: Yup.string()\r\n                        .max(255)\r\n                        /**\r\n                         * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                         */\r\n                        .test(\r\n                            'ouInclusifCodeDesc', // test name\r\n                            'Au moins l\\'un des champs code et description doit être rempli', // validation message to the user\r\n                            // it has to be function definition to use 'this'\r\n                            function (description) {\r\n                                const { code } = this.parent;\r\n                                if (code || description) {\r\n                                    return true; // lorsqu'il y a au moins un champs de rempli\r\n                                }\r\n                                return false;\r\n                            }\r\n                        ),\r\n\r\n                    qte_demandee: Yup.number()\r\n                        .integer()\r\n                        .min(1)\r\n                        .required()\r\n                        // eslint-disable-next-line\r\n                        .typeError('Le champs ${path} doit contenir un nombre'),\r\n\r\n                    prix: Yup.number()\r\n                        .min(0.0050)\r\n                        .positive()\r\n                        // eslint-disable-next-line\r\n                        .typeError('Le champs ${path} doit contenir un nombre'),\r\n                })\r\n            )\r\n        });\r\n    }\r\n\r\n    state = {\r\n        open: false,\r\n    }\r\n\r\n    // Lorsque l'utilisateur clique sur l'icône de suppression\r\n    handleClickOpen() {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    };\r\n\r\n    // Lorsque l'utilisateur ferme l'Alert de suppression\r\n    handleClickClose() {\r\n        this.setState({\r\n            open: false\r\n        });\r\n        window.location.replace(\"/\");\r\n    };\r\n\r\n    /**\r\n     * @author Alex Lajeunesse\r\n     * @function render\r\n     * @description Affiche l'interface.\r\n     * @see https://www.youtube.com/watch?v=FD50LPJ6bjE pour Formik et TextField\r\n     * @see https://formik.org/docs/examples/field-arrays pour les produits\r\n     */\r\n    render() {\r\n        // Champs de l'en-tête de la commande\r\n        const OrderTextField = ({ placeholder, ...props }) => {\r\n            const [field, meta] = useField(props);\r\n            // Erreur si un champ a été touché et que la validation a échoué\r\n            const error = meta.error && meta.touched ? meta.error : '';\r\n            // Format de base pour OrderTextField\r\n            return (\r\n                <TextField\r\n                    className=\"order-form-item\"\r\n                    placeholder={placeholder}\r\n                    {...field}\r\n                    helperText={error}\r\n                    error={!!error}\r\n                />\r\n            );\r\n        }\r\n        // Champs des produits de la commande\r\n        const ProductTextField = ({ placeholder, ...props }) => {\r\n            const [field, meta] = useField(props);\r\n            // Erreur si un champ a été touché et que la validation a échoué\r\n            const error = meta.error && meta.touched ? meta.error : '';\r\n            // Format de base pour OrderTextField\r\n            return (\r\n                <TextField\r\n                    className=\"product-form-item\"\r\n                    placeholder={placeholder}\r\n                    {...field}\r\n                    helperText={error}\r\n                    error={!!error}\r\n                />\r\n            );\r\n        }\r\n\r\n        // Les valeurs initiales du premier produit\r\n        const initialValues = {\r\n            entreprise: '',\r\n            nom: '',\r\n            no_compte: undefined,\r\n            telephone: '',\r\n            courriel: '',\r\n            po_client: '',\r\n            vendeur: '',\r\n            commentaire: '',\r\n            attention: '',\r\n            produits: [\r\n                {\r\n                    code: '',\r\n                    descrption: '',\r\n                    qte_demandee: '',\r\n                    prix: undefined,\r\n                },\r\n            ],\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <NavBar />\r\n                </header>\r\n                <div className=\"content\">\r\n                    <div>\r\n                        <Dialog\r\n                            open={this.state.open}\r\n                            onClose={this.handleClickClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\">\r\n                            <DialogTitle id=\"alert-dialog-title\">{\"Commande créée avec succès !\"}</DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-description\">\r\n                                    La commande a été créée avec succès ! Un courriel a été envoyé à la personne mentionnée.</DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={this.handleClickClose} color=\"primary\">Ok</Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                    <h1>Créer une commande</h1>\r\n                    <Formik\r\n                        validateOnChange\r\n                        initialValues={initialValues}\r\n                        onSubmit={async (data, { setSubmitting, resetForm }) => {\r\n                            // Désactive le bouton \"Enregistrer\"\r\n                            setSubmitting(true);\r\n                            console.log(data);\r\n                            try {\r\n                                const orderResponse = await axios.post('http://localhost:5000/api/commandes/create', {\r\n                                    entreprise: data.entreprise,\r\n                                    nom: data.nom,\r\n                                    no_compte: data.no_compte,\r\n                                    telephone: data.telephone,\r\n                                    courriel: data.courriel,\r\n                                    po_client: data.po_client,\r\n                                    vendeur: data.vendeur,\r\n                                    commentaire: data.commentaire,\r\n                                    attention: data.attention,\r\n                                });\r\n                                console.log(orderResponse);\r\n                                const productURL = 'http://localhost:5000/api/produits/create/' + orderResponse.data[0][0].id\r\n                                var productResponse = [];\r\n                                for (let p = 0; p < data.produits.length; p++) {\r\n                                    productResponse[p] = await axios.post(productURL.toString(), {\r\n                                        code: data.produits[p].code,\r\n                                        descrption: data.produits[p].descrption,\r\n                                        qte_demandee: data.produits[p].qte_demandee,\r\n                                        prix: data.produits[p].prix,\r\n                                    });\r\n                                }\r\n                                console.log(productResponse);\r\n                                // Ouvre le popup d'information\r\n                                this.handleClickOpen();\r\n                                // Erreur\r\n                            } catch (error) {\r\n                                console.log(error);\r\n                            }\r\n\r\n                            // Réactive le bouton \"Enregistrer\"\r\n                            setSubmitting(false);\r\n                        }}\r\n                        validationSchema={this.schema}\r\n                    >\r\n                        {({ values, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n                            <Form>\r\n                                <Paper>\r\n                                    <div>\r\n                                        <OrderTextField\r\n                                            placeholder=\"Nom d'entreprise\"\r\n                                            name=\"entreprise\"\r\n                                        />\r\n                                        <OrderTextField\r\n                                            placeholder=\"Numéro de compte\"\r\n                                            name=\"no_compte\"\r\n                                        />\r\n                                        <OrderTextField\r\n                                            placeholder=\"Nom du client\"\r\n                                            name=\"nom\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <OrderTextField\r\n                                            placeholder=\"Téléphone\"\r\n                                            name=\"telephone\"\r\n                                        />\r\n                                        <OrderTextField\r\n                                            placeholder=\"Courriel\"\r\n                                            name=\"courriel\"\r\n                                        />\r\n                                        <OrderTextField\r\n                                            placeholder=\"PO du client\"\r\n                                            name=\"po_client\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <OrderTextField\r\n                                            placeholder=\"*Vendeur\"\r\n                                            name=\"vendeur\"\r\n                                        />\r\n                                        <OrderTextField\r\n                                            placeholder=\"Commentaire\"\r\n                                            name=\"commentaire\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControl className=\"order-form-item\">\r\n                                            <InputLabel htmlFor=\"attention\">*Attention</InputLabel>\r\n                                            <Field\r\n                                                type=\"select\"\r\n                                                as={Select}\r\n                                                name=\"attention\"\r\n                                            >\r\n                                                <MenuItem value={'alexinlife.exe@gmail.com'}>Alex Lajeunesse</MenuItem>\r\n                                            </Field>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </Paper>\r\n                                <h1>Produits</h1>\r\n                                <Paper>\r\n                                    <FieldArray name=\"produits\">\r\n                                        {({ insert, remove, push }) => (\r\n                                            <div>\r\n                                                {values.produits.length > 0 &&\r\n                                                    values.produits.map((produit, index) => (\r\n                                                        <div className=\"row\" key={index}>\r\n                                                            <div className=\"col\">\r\n                                                                <ProductTextField\r\n                                                                    name={`produits.${index}.qte_demandee`}\r\n                                                                    placeholder=\"*Quantité demandée\"\r\n                                                                    type=\"text\"\r\n                                                                />\r\n                                                                <ProductTextField\r\n                                                                    name={`produits.${index}.code`}\r\n                                                                    placeholder=\"Code\"\r\n                                                                    type=\"text\"\r\n                                                                />\r\n                                                                <ProductTextField\r\n                                                                    name={`produits.${index}.description`}\r\n                                                                    placeholder=\"Description\"\r\n                                                                    type=\"text\"\r\n                                                                />\r\n                                                                <ProductTextField\r\n                                                                    name={`produits.${index}.prix`}\r\n                                                                    placeholder=\"Prix\"\r\n                                                                    type=\"text\"\r\n                                                                />\r\n                                                                <Button className=\"form-delete-button\" disabled={isSubmitting} onClick={() => remove(index)}><b>X</b></Button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    ))}\r\n                                                <Button className=\"form-button\" disabled={isSubmitting}\r\n                                                    onClick={() => push({ code: '', descrption: '', qte_demandee: '', prix: undefined })}\r\n                                                ><b>Ajouter un produit</b></Button>\r\n                                            </div>\r\n                                        )}\r\n                                    </FieldArray>\r\n                                </Paper>\r\n                                <Paper className=\"paper-button\">\r\n                                    <div>\r\n                                        <Button className=\"form-button\" disabled={isSubmitting} type=\"submit\"><b>Enregistrer</b></Button>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}