{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alexi\\\\GitHub\\\\sidekick\\\\app\\\\src\\\\components\\\\CreationCommande.jsx\";\nimport React from 'react';\nimport '../css/Style.css';\nimport NavBar from './rfc/NavBar';\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup'; // Composants Material-UI\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n/**\r\n * @author Alex Lajeunesse\r\n * @class CreationCommande\r\n * @description Gère la page de création et de modification de commandes (affichage, requêtes à l'API, redirection et formulaires)\r\n */\n\nexport default class CreationCommande extends React.Component {\n  constructor(props) {\n    super(); // Localisation en français\n\n    Yup.setLocale({\n      mixed: {\n        default: 'Champ ${path} invalide',\n        required: 'Le champ ${path} est obligatoire'\n      },\n      string: {\n        max: 'Le champ ${path} doit contenir un maximum de ${max} caractères',\n        email: 'L\\'adresse courriel doit être valide'\n      },\n      number: {\n        max: 'Le champ ${path} doit avoir un nombre inférieur à ${max}'\n      }\n    });\n    this.schema = Yup.object({\n      entreprise: Yup.string().max(64)\n      /**\r\n       * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n       */\n      .test('ouInclusifEntrepriseNom', // test name\n      'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\n      // it has to be function definition to use 'this'\n      function (entreprise) {\n        const {\n          nom,\n          telephone,\n          courriel\n        } = this.parent;\n\n        if ((entreprise || nom) && (entreprise || telephone || courriel)) {\n          return true; // lorsqu'il y a au moins un champs de rempli\n        }\n\n        return false;\n      })\n      /*.test(\r\n          'ouInclusifEntrepriseNom', // test name\r\n          'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\r\n          // it has to be function definition to use 'this'\r\n          function (entreprise) {\r\n              const { nom, telephone, courriel } = this.parent;\r\n              if ((entreprise || nom) && (entreprise || telephone || courriel)) {\r\n                  return true; // lorsqu'il y a au moins un champs de rempli\r\n              }\r\n              return false;\r\n          }\r\n      )*/\n      ,\n      nom: Yup.string().max(64),\n      no_compte: Yup.number().max(169999999).typeError('Le champs ${path} doit contenir un nombre'),\n      telephone: Yup.string().max(32),\n      courriel: Yup.string().email().max(255),\n      po_client: Yup.string().max(64),\n      vendeur: Yup.string().max(4).required(),\n      commentaire: Yup.string().max(512),\n      attention: Yup.string().email().max(255).required()\n    });\n  }\n  /**\r\n   * @author Alex Lajeunesse\r\n   * @function render\r\n   * @description Affiche l'interface.\r\n   * @see https://www.youtube.com/watch?v=FD50LPJ6bjE\r\n   */\n\n\n  render() {\n    var _s = $RefreshSig$();\n\n    const MyTextField = ({\n      placeholder,\n      ...props\n    }) => {\n      _s();\n\n      const [field, meta] = useField(props);\n      const error = meta.error && meta.touched ? meta.error : '';\n      return /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"form-item\",\n        placeholder: placeholder,\n        ...field,\n        helperText: error,\n        error: !!error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this);\n    };\n\n    _s(MyTextField, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n      return [useField];\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cr\\xE9er une commande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            validateOnChange: true,\n            initialValues: {\n              entreprise: '',\n              nom: '',\n              no_compte: '',\n              telephone: '',\n              courriel: '',\n              po_client: '',\n              vendeur: '',\n              commentaire: '',\n              attention: ''\n            },\n            onSubmit: (data, {\n              setSubmitting\n            }) => {\n              setSubmitting(true);\n              console.log(data);\n              setSubmitting(false);\n            },\n            validationSchema: this.schema,\n            children: ({\n              values,\n              isSubmitting,\n              handleChange,\n              handleBlur,\n              handleSubmit\n            }) => /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Nom d'entreprise\",\n                  name: \"entreprise\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Num\\xE9ro de compte\",\n                  name: \"no_compte\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Nom du client\",\n                  name: \"nom\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"T\\xE9l\\xE9phone\",\n                  name: \"telephone\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Courriel\",\n                  name: \"courriel\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"PO du client\",\n                  name: \"po_client\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"*Vendeur\",\n                  name: \"vendeur\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"*Attention\",\n                  name: \"attention\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(MyTextField, {\n                  placeholder: \"Commentaire\",\n                  name: \"commentaire\",\n                  type: \"input\",\n                  as: TextField\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"form-item\",\n                  disabled: isSubmitting,\n                  type: \"submit\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Enregistrer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 109\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/alexi/GitHub/sidekick/app/src/components/CreationCommande.jsx"],"names":["React","NavBar","Formik","Form","useField","Yup","Paper","TextField","Button","CreationCommande","Component","constructor","props","setLocale","mixed","default","required","string","max","email","number","schema","object","entreprise","test","nom","telephone","courriel","parent","no_compte","typeError","po_client","vendeur","commentaire","attention","render","MyTextField","placeholder","field","meta","error","touched","data","setSubmitting","console","log","values","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,QAAuC,QAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAE1DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YADe,CAGf;;AACAP,IAAAA,GAAG,CAACQ,SAAJ,CAAc;AACVC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE,wBADN;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OADG;AAKVC,MAAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAE,gEADD;AAEJC,QAAAA,KAAK,EAAE;AAFH,OALE;AASVC,MAAAA,MAAM,EAAE;AACJF,QAAAA,GAAG,EAAE;AADD;AATE,KAAd;AAcA,SAAKG,MAAL,GAAchB,GAAG,CAACiB,MAAJ,CAAW;AACrBC,MAAAA,UAAU,EAAElB,GAAG,CAACY,MAAJ,GACPC,GADO,CACH,EADG;AAER;AAChB;AACA;AAJwB,OAKPM,IALO,CAMJ,yBANI,EAMuB;AAC3B,oEAPI,EAO4D;AAChE;AACA,gBAAUD,UAAV,EAAsB;AAClB,cAAM;AAAEE,UAAAA,GAAF;AAAOC,UAAAA,SAAP;AAAkBC,UAAAA;AAAlB,YAA+B,KAAKC,MAA1C;;AACA,YAAI,CAACL,UAAU,IAAIE,GAAf,MAAwBF,UAAU,IAAIG,SAAd,IAA2BC,QAAnD,CAAJ,EAAkE;AAC9D,iBAAO,IAAP,CAD8D,CACjD;AAChB;;AACD,eAAO,KAAP;AACH,OAfG;AAiBR;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BiC;AA+BrBF,MAAAA,GAAG,EAAEpB,GAAG,CAACY,MAAJ,GACAC,GADA,CACI,EADJ,CA/BgB;AAkCrBW,MAAAA,SAAS,EAAExB,GAAG,CAACe,MAAJ,GACNF,GADM,CACF,SADE,EAENY,SAFM,CAEI,2CAFJ,CAlCU;AAsCrBJ,MAAAA,SAAS,EAAErB,GAAG,CAACY,MAAJ,GACNC,GADM,CACF,EADE,CAtCU;AAyCrBS,MAAAA,QAAQ,EAAEtB,GAAG,CAACY,MAAJ,GACLE,KADK,GAELD,GAFK,CAED,GAFC,CAzCW;AA6CrBa,MAAAA,SAAS,EAAE1B,GAAG,CAACY,MAAJ,GACNC,GADM,CACF,EADE,CA7CU;AAgDrBc,MAAAA,OAAO,EAAE3B,GAAG,CAACY,MAAJ,GACJC,GADI,CACA,CADA,EAEJF,QAFI,EAhDY;AAoDrBiB,MAAAA,WAAW,EAAE5B,GAAG,CAACY,MAAJ,GACRC,GADQ,CACJ,GADI,CApDQ;AAuDrBgB,MAAAA,SAAS,EAAE7B,GAAG,CAACY,MAAJ,GACNE,KADM,GAEND,GAFM,CAEF,GAFE,EAGNF,QAHM;AAvDU,KAAX,CAAd;AA4DH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AACImB,EAAAA,MAAM,GAAG;AAAA;;AACL,UAAMC,WAAW,GAAG,CAAC;AAAEC,MAAAA,WAAF;AAAe,SAAGzB;AAAlB,KAAD,KAA+B;AAAA;;AAC/C,YAAM,CAAC0B,KAAD,EAAQC,IAAR,IAAgBnC,QAAQ,CAACQ,KAAD,CAA9B;AACA,YAAM4B,KAAK,GAAGD,IAAI,CAACC,KAAL,IAAcD,IAAI,CAACE,OAAnB,GAA6BF,IAAI,CAACC,KAAlC,GAA0C,EAAxD;AACA,0BACI,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,WADd;AAEI,QAAA,WAAW,EAAEH,WAFjB;AAAA,WAGQC,KAHR;AAII,QAAA,UAAU,EAAEE,KAJhB;AAKI,QAAA,KAAK,EAAE,CAAC,CAACA;AALb;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAZD;;AADK,OACCJ,WADD;AAAA,cAEqBhC,QAFrB;AAAA;;AAcL,wBACI;AAAA,8BACI;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAA,iCACI,QAAC,MAAD;AACI,YAAA,gBAAgB,MADpB;AAEI,YAAA,aAAa,EAAE;AAAEmB,cAAAA,UAAU,EAAE,EAAd;AAAkBE,cAAAA,GAAG,EAAE,EAAvB;AAA2BI,cAAAA,SAAS,EAAE,EAAtC;AAA0CH,cAAAA,SAAS,EAAE,EAArD;AAAyDC,cAAAA,QAAQ,EAAE,EAAnE;AAAuEI,cAAAA,SAAS,EAAE,EAAlF;AAAsFC,cAAAA,OAAO,EAAE,EAA/F;AAAmGC,cAAAA,WAAW,EAAE,EAAhH;AAAoHC,cAAAA,SAAS,EAAE;AAA/H,aAFnB;AAGI,YAAA,QAAQ,EAAE,CAACQ,IAAD,EAAO;AAAEC,cAAAA;AAAF,aAAP,KAA6B;AACnCA,cAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,cAAAA,aAAa,CAAC,KAAD,CAAb;AACH,aAPL;AAQI,YAAA,gBAAgB,EAAE,KAAKtB,MAR3B;AAAA,sBAUK,CAAC;AAAEyB,cAAAA,MAAF;AAAUC,cAAAA,YAAV;AAAwBC,cAAAA,YAAxB;AAAsCC,cAAAA,UAAtC;AAAkDC,cAAAA;AAAlD,aAAD,kBACG,QAAC,IAAD;AAAA,sCACI;AAAA,wCACI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,kBADhB;AAEI,kBAAA,IAAI,EAAC,YAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAE3C;AAJR;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,qBADhB;AAEI,kBAAA,IAAI,EAAC,WAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAaI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,eADhB;AAEI,kBAAA,IAAI,EAAC,KAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAqBI;AAAA,wCACI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,iBADhB;AAEI,kBAAA,IAAI,EAAC,WAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,UADhB;AAEI,kBAAA,IAAI,EAAC,UAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA,wBAPJ,eAaI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,cADhB;AAEI,kBAAA,IAAI,EAAC,WAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA,wBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBJ,eAyCI;AAAA,wCACI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,UADhB;AAEI,kBAAA,IAAI,EAAC,SAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA,wBADJ,eAOI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,YADhB;AAEI,kBAAA,IAAI,EAAC,WAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzCJ,eAuDI;AAAA,uCACI,QAAC,WAAD;AACI,kBAAA,WAAW,EAAC,aADhB;AAEI,kBAAA,IAAI,EAAC,aAFT;AAGI,kBAAA,IAAI,EAAC,OAHT;AAII,kBAAA,EAAE,EAAEA;AAJR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAvDJ,eA+DI;AAAA,uCACI,QAAC,MAAD;AAAQ,kBAAA,SAAS,EAAC,WAAlB;AAA8B,kBAAA,QAAQ,EAAEwC,YAAxC;AAAsD,kBAAA,IAAI,EAAC,QAA3D;AAAA,yCAAoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBA/DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4FH;;AAlMyD","sourcesContent":["import React from 'react'\r\nimport '../css/Style.css';\r\nimport NavBar from './rfc/NavBar';\r\nimport { Formik, Form, useField } from 'formik';\r\nimport * as Yup from 'yup';\r\n// Composants Material-UI\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n/**\r\n * @author Alex Lajeunesse\r\n * @class CreationCommande\r\n * @description Gère la page de création et de modification de commandes (affichage, requêtes à l'API, redirection et formulaires)\r\n */\r\nexport default class CreationCommande extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n\r\n        // Localisation en français\r\n        Yup.setLocale({\r\n            mixed: {\r\n                default: 'Champ ${path} invalide',\r\n                required: 'Le champ ${path} est obligatoire'\r\n            },\r\n            string: {\r\n                max: 'Le champ ${path} doit contenir un maximum de ${max} caractères',\r\n                email: 'L\\'adresse courriel doit être valide'\r\n            },\r\n            number: {\r\n                max: 'Le champ ${path} doit avoir un nombre inférieur à ${max}'\r\n            }\r\n        });\r\n\r\n        this.schema = Yup.object({\r\n            entreprise: Yup.string()\r\n                .max(64)\r\n                /**\r\n                 * @see https://krzysztofzuraw.com/blog/2020/yup-validation-two-fields\r\n                 */\r\n                .test(\r\n                    'ouInclusifEntrepriseNom', // test name\r\n                    'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (entreprise) {\r\n                        const { nom, telephone, courriel } = this.parent;\r\n                        if ((entreprise || nom) && (entreprise || telephone || courriel)) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                )\r\n                /*.test(\r\n                    'ouInclusifEntrepriseNom', // test name\r\n                    'Au moins l\\'un des champs entreprise et nom doit être rempli', // validation message to the user\r\n                    // it has to be function definition to use 'this'\r\n                    function (entreprise) {\r\n                        const { nom, telephone, courriel } = this.parent;\r\n                        if ((entreprise || nom) && (entreprise || telephone || courriel)) {\r\n                            return true; // lorsqu'il y a au moins un champs de rempli\r\n                        }\r\n                        return false;\r\n                    }\r\n                )*/,\r\n\r\n            nom: Yup.string()\r\n                .max(64),\r\n\r\n            no_compte: Yup.number()\r\n                .max(169999999)\r\n                .typeError('Le champs ${path} doit contenir un nombre'),\r\n\r\n            telephone: Yup.string()\r\n                .max(32),\r\n\r\n            courriel: Yup.string()\r\n                .email()\r\n                .max(255),\r\n\r\n            po_client: Yup.string()\r\n                .max(64),\r\n\r\n            vendeur: Yup.string()\r\n                .max(4)\r\n                .required(),\r\n\r\n            commentaire: Yup.string()\r\n                .max(512),\r\n\r\n            attention: Yup.string()\r\n                .email()\r\n                .max(255)\r\n                .required()\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @author Alex Lajeunesse\r\n     * @function render\r\n     * @description Affiche l'interface.\r\n     * @see https://www.youtube.com/watch?v=FD50LPJ6bjE\r\n     */\r\n    render() {\r\n        const MyTextField = ({ placeholder, ...props }) => {\r\n            const [field, meta] = useField(props);\r\n            const error = meta.error && meta.touched ? meta.error : '';\r\n            return (\r\n                <TextField\r\n                    className=\"form-item\"\r\n                    placeholder={placeholder}\r\n                    {...field}\r\n                    helperText={error}\r\n                    error={!!error}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <NavBar />\r\n                </header>\r\n                <div className=\"content\">\r\n                    <h1>Créer une commande</h1>\r\n                    <Paper>\r\n                        <Formik\r\n                            validateOnChange\r\n                            initialValues={{ entreprise: '', nom: '', no_compte: '', telephone: '', courriel: '', po_client: '', vendeur: '', commentaire: '', attention: '' }}\r\n                            onSubmit={(data, { setSubmitting }) => {\r\n                                setSubmitting(true);\r\n                                console.log(data);\r\n                                setSubmitting(false);\r\n                            }}\r\n                            validationSchema={this.schema}\r\n                        >\r\n                            {({ values, isSubmitting, handleChange, handleBlur, handleSubmit }) => (\r\n                                <Form>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"Nom d'entreprise\"\r\n                                            name=\"entreprise\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"Numéro de compte\"\r\n                                            name=\"no_compte\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"Nom du client\"\r\n                                            name=\"nom\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"Téléphone\"\r\n                                            name=\"telephone\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"Courriel\"\r\n                                            name=\"courriel\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"PO du client\"\r\n                                            name=\"po_client\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"*Vendeur\"\r\n                                            name=\"vendeur\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                        <MyTextField\r\n                                            placeholder=\"*Attention\"\r\n                                            name=\"attention\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <MyTextField\r\n                                            placeholder=\"Commentaire\"\r\n                                            name=\"commentaire\"\r\n                                            type=\"input\"\r\n                                            as={TextField}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <Button className=\"form-item\" disabled={isSubmitting} type=\"submit\"><b>Enregistrer</b></Button>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}